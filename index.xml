<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Website</title>
    <link>/</link>
    <description>Recent content on My Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 09 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Blog</title>
      <link>/post/2020/12/09/my-blog/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/09/my-blog/</guid>
      <description>Python and R Python and R use different coding languages but are still able to talk to each other. In this post, I&#39;ll show you how! But first, here&#39;s a picture of some penguins.
 Python To start off, let&#39;s do some coding in python. In the code below, there is a segment of DNA, we are going to find the number of possible times the amino acid tyrosine is found in this sequence (depending on the reading frame of the DNA).</description>
    </item>
    
    <item>
      <title>Project 1</title>
      <link>/project/project1/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</description>
    </item>
    
    <item>
      <title>Project 2</title>
      <link>/project/project2/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>knitr::opts_chunk$set(warning = FALSE, message = FALSE) # Load data/ Introduce dataset HealthInsurance &amp;lt;- read.csv(&amp;quot;HealthInsurance.csv&amp;quot;, header = TRUE) ncol(HealthInsurance) ## [1] 12 nrow(HealthInsurance) ## [1] 8802 library(glmnet) library(lmtest) library(plotROC) library(pROC) The HealthInsurance dataset was collected from the Medical Expenditure Panel Survey in 1996. There are 8,802 observations of 11 different variables. The first column, x, just contains a number to represent the distinct participants. The health variable is a self-reported question, where the participant answered yes or no for whether they considered themselves healthy.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description> Check out some of my coding projects below:
 Wrangling &amp;amp; Exploratory Data Analysis
 Modeling, Inference, Prediction
  -- </description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>    </description>
    </item>
    
  </channel>
</rss>
